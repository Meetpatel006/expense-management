"""Initial migration

Revision ID: 7e32c10a436e
Revises: 
Create Date: 2025-10-04 11:28:04.823270

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '7e32c10a436e'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('companies',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('base_currency', sa.String(length=10), nullable=False),
    sa.Column('country', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('role', sa.Enum('ADMIN', 'MANAGER', 'EMPLOYEE', name='userrole'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('company_id', sa.String(length=36), nullable=False),
    sa.Column('manager_id', sa.String(length=36), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.ForeignKeyConstraint(['manager_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('approval_rules',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('company_id', sa.String(length=36), nullable=False),
    sa.Column('manager_id', sa.String(length=36), nullable=False),
    sa.Column('rule_name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_manager_first_approver', sa.Boolean(), nullable=True),
    sa.Column('is_sequential', sa.Boolean(), nullable=True),
    sa.Column('minimum_approval_percentage', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.ForeignKeyConstraint(['manager_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('expenses',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('employee_id', sa.String(length=36), nullable=False),
    sa.Column('company_id', sa.String(length=36), nullable=False),
    sa.Column('current_approver_id', sa.String(length=36), nullable=True),
    sa.Column('approval_rule_id', sa.String(length=36), nullable=True),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('currency', sa.String(length=10), nullable=False),
    sa.Column('amount_in_base_currency', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('category', sa.Enum('FOOD', 'TRAVEL', 'ACCOMMODATION', 'OFFICE_SUPPLIES', 'OTHER', name='expensecategory'), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('expense_date', sa.DateTime(), nullable=False),
    sa.Column('receipt_url', sa.String(length=500), nullable=True),
    sa.Column('paid_by', sa.String(length=100), nullable=True),
    sa.Column('remarks', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('DRAFT', 'SUBMITTED', 'PENDING_APPROVAL', 'APPROVED', 'REJECTED', name='expensestatus'), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('submitted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['approval_rule_id'], ['approval_rules.id'], ),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.ForeignKeyConstraint(['current_approver_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['employee_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('rule_approvers',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('approval_rule_id', sa.String(length=36), nullable=False),
    sa.Column('approver_id', sa.String(length=36), nullable=False),
    sa.Column('sequence_order', sa.Integer(), nullable=False),
    sa.Column('is_required', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['approval_rule_id'], ['approval_rules.id'], ),
    sa.ForeignKeyConstraint(['approver_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('approval_history',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('expense_id', sa.String(length=36), nullable=False),
    sa.Column('approver_id', sa.String(length=36), nullable=False),
    sa.Column('action', sa.Enum('APPROVED', 'REJECTED', name='approvalaction'), nullable=False),
    sa.Column('comments', sa.Text(), nullable=True),
    sa.Column('sequence_step', sa.Integer(), nullable=False),
    sa.Column('approved_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['approver_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['expense_id'], ['expenses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('expense_lines',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('expense_id', sa.String(length=36), nullable=False),
    sa.Column('item_description', sa.String(length=500), nullable=False),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['expense_id'], ['expenses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('expense_lines')
    op.drop_table('approval_history')
    op.drop_table('rule_approvers')
    op.drop_table('expenses')
    op.drop_table('approval_rules')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_table('companies')
    # ### end Alembic commands ###
